{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { pathNames } from \"../constants/path\";\nconst loginUrl = \"https://myshop-api.onrender.com/api/user/login\"; //адреса серверов для авторизации пользователей\nconst registrationUrl = \"https://myshop-api.onrender.com/api/user/registration\";\nexport function useAuth() {\n  _s();\n  //const [isAuth, setAuth] = useState(localStorage.getItem(\"isAuth\")); //состояние для проверки залогинен пользователь или нет, в состоянии проверяем ставил ли пользователь галочку на \"помни меня\"\n\n  const [isAuth, setAuth] = useState(true); //! тестовая авторизация\n\n  const [rememberMe, setRemember] = useState(false); //*состояние для галочки \"помни меня\"\n  const [errorMessage, setErrorMessage] = useState(\"\"); //стейт для вывода ошибок при регистрации\n  const [user, setUser] = useState(null); //тут хранятся данные после авторизации, которые получены от сервера\n  const navigate = useNavigate();\n  const goBack = useCallback(() => {\n    //*переадресация на главную страницу\n    navigate(\"/\");\n  }, [navigate]);\n  async function handlerSubmitForm(event) {\n    //*обработчик для кнопки войти с учетными данными\n    event.preventDefault();\n    try {\n      let response = await axios.post(loginUrl, {\n        //асинхронно через post получаем от сервера ответ после ввода логина и пароля и записываем его в стейт user\n        username: event.target.email.value,\n        password: event.target.password.value\n      });\n      setUser(response.data);\n      localStorage.setItem(\"isAuth\", true);\n    } catch (error) {\n      setErrorMessage(error.response.data.message);\n    }\n  }\n  function handlerRegistration(event) {\n    //*обработчик для кнопки регистрация\n    event.preventDefault();\n    if (event.target.password.value === event.target.passwordRepeat.value) {\n      //делаем проверку полей пароля и повторения пароля, если все ок, то отправляем post запрос на сервер с данными из input,далее если токен получен, перебрасываем на страницу входа, иначе выводим ошибки\n      axios.post(registrationUrl, {\n        username: event.target.email.value,\n        password: event.target.password.value\n      }).then(response => {\n        setUser(response.data.token);\n        event.target.reset();\n      }).catch(error => {\n        if (error.response.data.message.errors) {\n          let errMess = error.response.data.message.errors;\n          errMess.forEach(element => {\n            setErrorMessage(element.msg);\n          });\n        } else {\n          let errMess = error.response.data.message;\n          setErrorMessage(errMess);\n        }\n      });\n    } else {\n      setErrorMessage(\"Введи пароль нормально, ок?\");\n    }\n  }\n  function handleLogout() {\n    //*обработчик для разлогинивания\n    setAuth(!isAuth);\n    navigate(pathNames.login);\n    setRemember(false);\n    localStorage.removeItem(\"isAuth\");\n  }\n  useEffect(() => {\n    //use effect который проверяет user, если он существует, то меняет стейт авторизации и пускает в приватный роутинг\n    setErrorMessage(\"\");\n    if (user) {\n      setAuth(true);\n      goBack();\n      setUser(null);\n    }\n  }, [user, isAuth, goBack]);\n  return {\n    errorMessage,\n    handlerSubmitForm,\n    handlerRegistration,\n    setAuth,\n    isAuth,\n    handleLogout,\n    rememberMe,\n    setRemember\n  };\n}\n_s(useAuth, \"BSCtORnqjq++3UHDUsRmrxg1e/k=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"names":["axios","useCallback","useEffect","useState","useNavigate","pathNames","loginUrl","registrationUrl","useAuth","_s","isAuth","setAuth","rememberMe","setRemember","errorMessage","setErrorMessage","user","setUser","navigate","goBack","handlerSubmitForm","event","preventDefault","response","post","username","target","email","value","password","data","localStorage","setItem","error","message","handlerRegistration","passwordRepeat","then","token","reset","catch","errors","errMess","forEach","element","msg","handleLogout","login","removeItem"],"sources":["/home/user/Desktop/app-typescript/src/hooks/useAuth.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { pathNames } from \"../constants/path\";\n\nconst loginUrl = \"https://myshop-api.onrender.com/api/user/login\"; //адреса серверов для авторизации пользователей\nconst registrationUrl = \"https://myshop-api.onrender.com/api/user/registration\";\n\nexport function useAuth() {\n\t//const [isAuth, setAuth] = useState(localStorage.getItem(\"isAuth\")); //состояние для проверки залогинен пользователь или нет, в состоянии проверяем ставил ли пользователь галочку на \"помни меня\"\n\n\tconst [isAuth, setAuth] = useState(true); //! тестовая авторизация\n\n\tconst [rememberMe, setRemember] = useState(false); //*состояние для галочки \"помни меня\"\n\tconst [errorMessage, setErrorMessage] = useState(\"\"); //стейт для вывода ошибок при регистрации\n\tconst [user, setUser] = useState(null); //тут хранятся данные после авторизации, которые получены от сервера\n\tconst navigate = useNavigate();\n\n\tconst goBack = useCallback(() => {\n\t\t//*переадресация на главную страницу\n\t\tnavigate(\"/\");\n\t}, [navigate]);\n\n\tasync function handlerSubmitForm(event) {\n\t\t//*обработчик для кнопки войти с учетными данными\n\t\tevent.preventDefault();\n\t\ttry {\n\t\t\tlet response = await axios.post(loginUrl, {\n\t\t\t\t//асинхронно через post получаем от сервера ответ после ввода логина и пароля и записываем его в стейт user\n\t\t\t\tusername: event.target.email.value,\n\t\t\t\tpassword: event.target.password.value,\n\t\t\t});\n\t\t\tsetUser(response.data);\n\t\t\tlocalStorage.setItem(\"isAuth\", true);\n\t\t} catch (error) {\n\t\t\tsetErrorMessage(error.response.data.message);\n\t\t}\n\t}\n\n\tfunction handlerRegistration(event) {\n\t\t//*обработчик для кнопки регистрация\n\t\tevent.preventDefault();\n\t\tif (event.target.password.value === event.target.passwordRepeat.value) {\n\t\t\t//делаем проверку полей пароля и повторения пароля, если все ок, то отправляем post запрос на сервер с данными из input,далее если токен получен, перебрасываем на страницу входа, иначе выводим ошибки\n\t\t\taxios\n\t\t\t\t.post(registrationUrl, {\n\t\t\t\t\tusername: event.target.email.value,\n\t\t\t\t\tpassword: event.target.password.value,\n\t\t\t\t})\n\t\t\t\t.then(response => {\n\t\t\t\t\tsetUser(response.data.token);\n\t\t\t\t\tevent.target.reset();\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tif (error.response.data.message.errors) {\n\t\t\t\t\t\tlet errMess = error.response.data.message.errors;\n\t\t\t\t\t\terrMess.forEach(element => {\n\t\t\t\t\t\t\tsetErrorMessage(element.msg);\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet errMess = error.response.data.message;\n\t\t\t\t\t\tsetErrorMessage(errMess);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t} else {\n\t\t\tsetErrorMessage(\"Введи пароль нормально, ок?\");\n\t\t}\n\t}\n\n\tfunction handleLogout() {\n\t\t//*обработчик для разлогинивания\n\t\tsetAuth(!isAuth);\n\t\tnavigate(pathNames.login);\n\t\tsetRemember(false);\n\t\tlocalStorage.removeItem(\"isAuth\");\n\t}\n\n\tuseEffect(() => {\n\t\t//use effect который проверяет user, если он существует, то меняет стейт авторизации и пускает в приватный роутинг\n\t\tsetErrorMessage(\"\");\n\t\tif (user) {\n\t\t\tsetAuth(true);\n\t\t\tgoBack();\n\t\t\tsetUser(null);\n\t\t}\n\t}, [user, isAuth, goBack]);\n\n\treturn {\n\t\terrorMessage,\n\t\thandlerSubmitForm,\n\t\thandlerRegistration,\n\t\tsetAuth,\n\t\tisAuth,\n\t\thandleLogout,\n\t\trememberMe,\n\t\tsetRemember,\n\t};\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}